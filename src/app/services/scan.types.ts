// Generated by https://quicktype.io

export interface AxeScan {
  incomplete: Inapplicable[];
  passes: Inapplicable[];
  violations: Inapplicable[];
  inapplicable: Inapplicable[];
  url: string;
  timestamp: string;
}

export interface Inapplicable {
  help: string;
  nodes: Node[];
  description: string;
  helpUrl: string;
  id: string;
  tags: string[];
  impact?: Impact;
}

export enum Impact {
  Critical = 'critical',
  Minor = 'minor',
  Moderate = 'moderate',
  Serious = 'serious',
}

export interface Node {
  all: All[];
  impact?: Impact;
  html: string;
  none: All[];
  any: All[];
  target: string[];
  failureSummary?: string;
}

export interface All {
  data?: DataClass | number | string;
  impact: Impact;
  relatedNodes: RelatedNode[];
  id: string;
  message: string;
}

export interface DataClass {
  contrastRatio?: number;
  fgColor?: FgColor;
  missingData?: MissingData;
  expectedContrastRatio?: ExpectedContrastRatio;
  fontSize?: FontSize;
  fontWeight?: FontWeight;
  bgColor?: BgColor;
  role?: string;
}

export enum BgColor {
  Bd2827 = '#bd2827',
  E6Eef3 = '#e6eef3',
  F0F4F6 = '#f0f4f6',
  F1F3F4 = '#f1f3f4',
  Fafafa = '#fafafa',
  Ffffff = '#ffffff',
  The262626 = '#262626',
}

export enum ExpectedContrastRatio {
  The31 = '3:1',
  The451 = '4.5:1',
}

export enum FgColor {
  E9E9E9 = '#e9e9e9',
  Fafafa = '#fafafa',
  Ffffff = '#ffffff',
  The262626 = '#262626',
  The656565 = '#656565',
}

export enum FontSize {
  The105Pt = '10.5pt',
  The112Pt = '11.2pt',
  The120Pt = '12.0pt',
  The127Pt = '12.7pt',
  The148Pt = '14.8pt',
  The183Pt = '18.3pt',
  The262Pt = '26.2pt',
  The90Pt = '9.0pt',
}

export enum FontWeight {
  Bold = 'bold',
  Normal = 'normal',
}

export enum MissingData {
  ImgNode = 'imgNode',
  OutsideViewport = 'outsideViewport',
  ShortTextContent = 'shortTextContent',
}

export interface RelatedNode {
  html: string;
  target: string[];
}
